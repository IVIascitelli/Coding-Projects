// PART 1
char *my_strcat(const char *const str1, const char *const str2) {
    char *arrayPtr = NULL;
    int j1 = 0, j2 = 0, j = 0, n = (strlen(str1) + strlen(str2));
    arrayPtr = (int *)malloc(n);
    
    for(j1; j1 < strlen(str1); j1++) {                                          // j1 iterates through str1, appends to our array
        *(arrayPtr + j) = *(str1 + j1);
        j++;
    }
    
    for(j2; j2 < strlen(str2); j2++) {                                          // j2 iterates through str2, appends to our array
        *(arrayPtr + j) = *(str2 + j2);                                      // notice that j is an iterator that is always adding
        j++;
    }
    
    *(arrayPtr + n) = "/0";                                                            // finally, append our null character
    
    return arrayPtr;
}

// PART 2
int largest_prefix(const char *str, const char **list,int n){
    int i,j,index1,index2,count1=0,count2=0;
    
    for(i=0;i < n;i++){
        for(j=0; list[i][j] != '\0';j++){
            if(list[i][j] == str[j]){
                index1 = i;
                count1++;
            }
            else
                break;
        }
        if(count1 > count2){
            count2 = count1;
            index2 = index1;
        }
        count1 = 0;
    }
    
    if(count2 != 0){
        return index2;
    }
    else
        return -1;
}